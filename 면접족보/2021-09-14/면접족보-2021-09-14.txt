1. 자바의 명명 규칙에 대하여 설명하시오.
-클래스 : 클래스 이름의 첫 문자는 대문자로 시작한다.
둘 이상의 단어가 묶여서 하나의 이름을 이룰 때, 새로 시작하는 단어는 대문자로 한다.

-메소드 변수 : 메소드 및 변수 이름의 첫 문자는 소문자로 시작한다.
둘 이상의 단어가 묶여서 하나의 이름을 이룰 때, 새로 시작하는 단어는 대문자로 한다.

-상수 : 상수의 이름은 모든 문자를 대문자로 구성한다. 
둘 이상의 단어가 묶여서 하나의 이름을 이룰 때 단어 사이를 언더바로 연결한다.


2. 아래의 접근 제한자에 대하여 설명하시오.
-private  -protected  -default  -public

private : 클래스 내에서만 사용가능하도록 제한하는 접근 제어자. 다른 클래스 간 사용 및 참조는 컴파일에러를 일으킨다.
default : 패키지 내에서 사용가능한 접근 제어자. 다른 패키지 간 사용 및 참조는 컴파일에러를 일으킨다.
protected : 상속관계의 클래스 간 사용가능한 접근 제어자. 상속관계가 아닌 클래스가 사용 및 참조하면 컴파일에러를 일으킨다.
public : 별다른 제한이 없는 접근 제어자. 모든 객체에서 자유롭게 사용 및 참조가 가능하다.


3. 지역 변수에 접근 제한자를 붙이지 않는 이유는?
 - 지역변수는 해당 메소드가 끝나면 소멸하는 변수들이 대부분이기 때문에
접근제한자가 붙어있으면 오히려 혼선이 생길 수 있음.

4. 캡슐화(encapsulation)에 대하여 설명하시오.
※출처 : https://radait.tistory.com/5#comment14022084
캡슐화는 관련이 있는 변수와 함수를 하나의 클래스로 묶고 외부에서 쉽게 접근하지 못하도록 은닉하는게 핵심입니다.
객체에 직접적인 접근을 막고 외부에서 내부의 정보에 직접접근하거나 변경할 수 없고, 객체가 제공하는 필드와 메소드를 통해서만 접근이 가능합니다.
캡슐화의 가장큰 장점은 정보은닉(Information Hiding)에 있습니다.
외부에서 객체 접근하는데 있어서 정보를 숨기고 객체의 연산을 통해서만 접근이 가능하게 하는 것입니다.
정보은닉의 장점은 외부에서 특정 객체의 데이터 및 함수를 직접 접근을 막음으로써 변경을 못하게 하고 유지보수나 확장시 오류의 범위를 최소화 할 수 있고,
객체내 정보손상, 오용을 방지하고, 조작법이 바뀌어도 사용방법 자체는 바뀌지 않고, 데이터가 변경되어도 다른 객체에 영향을 주지 않기 때문에 독립성이 좋고,
처리된 결과사용으로 이식성이 좋고, 객체를 모듈화 할 수있어 새로운 시스템의 구성에 하나의 모듈처럼 사용이 가능하다.